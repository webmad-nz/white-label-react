{"version":3,"sources":["reportWebVitals.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Amy","initialize","theme","createAmyTheme","header","logo","background","useDarkText","login","backdrop","fadeBackground","feedbackRow","neutralBackgroundColor","positiveBackgroundColor","negativeBackgroundColor","stickyInstruction","shape","borderRadius","optionRow","unknownBackgroundColor","correctBackgroundColor","incorrectBackgroundColor","instructionRow","backgroundColor","overrides","MuiCard","root","margin","MuiCardHeader","padding","MuiCardContent","MuiCardActions","token","URL","window","location","href","searchParams","get","AuthSpace","useState","setToken","TextField","value","onChange","e","target","Button","variant","color","disabled","onClick","Users","signInViaToken","console","log","ReactDOM","render","StrictMode","CssBaseline","onLogout","document","getElementById"],"mappings":"kSAceA,G,QAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,QCEpBQ,MAAIC,aAEJ,IAAMC,EAAQC,yBAAe,CACzBC,OAAQ,CACJC,KAAK,eACLC,WAAY,SACZC,aAAa,GAEjBC,MAAO,CACHH,KAAK,gBAETI,SAAU,CACNH,WAAW,UACXI,gBAAgB,EAChBH,aAAa,GAEjBI,YAAa,CACTC,uBAAwB,UACxBC,wBAAyB,UACzBC,wBAAyB,WAE7BC,mBAAmB,EACnBC,MAAO,CACHC,aAAc,GAElBC,UAAW,CACPC,uBAAwB,UACxBC,uBAAwB,UACxBC,yBAA0B,WAE9BC,eAAgB,CACZC,gBAAiB,WAErBC,UAAW,CACPC,QAAS,CACLC,KAAM,CACFT,aAAc,mBACdU,OAAQ,uBAGhBC,cAAe,CACXF,KAAM,CACFG,QAAS,wBAGjBC,eAAgB,CACZJ,KAAM,CACFG,QAAS,yBAGjBE,eAAgB,CACZL,KAAM,CACFG,QAAS,4BAQnBG,EAFM,IAAIC,IAAIC,OAAOC,SAASC,MAElBC,aAAaC,IAAI,SAwBnC,SAASC,IACL,MAA0BC,mBAAS,IAAnC,mBAAOR,EAAP,KAAcS,EAAd,KAEA,OACI,qCACI,cAACC,EAAA,EAAD,CACIC,MAAOX,EACPY,SAAU,SAACC,GACPJ,EAASI,EAAEC,OAAOH,UAG1B,cAACI,EAAA,EAAD,CACIC,QAAQ,WACRC,MAAM,UACNC,UAAWlB,EACXmB,QAAS,WAELC,QAAMC,eAAe,CAAErB,UAAStC,MAAK,WACjC4D,QAAQC,IAAI,sDAPxB,sBAjCZH,QAAMC,eAAe,CAAErB,UAAStC,MAAK,WAEjC4D,QAAQC,IAAI,kBAMhBC,IAASC,OACL,eAAC,IAAMC,WAAP,WACI,cAACC,EAAA,EAAD,IACA,cAAC,UAAD,CACIzD,MAAOA,EACPM,MAAO,cAAC+B,EAAD,IACPqB,SAAU,WACNN,QAAQC,IAAI,gBAIxBM,SAASC,eAAe,SAkC5BvE,M","file":"static/js/main.e2a63344.chunk.js","sourcesContent":["import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import { Amy, Users } from \"@amy-app/js-sdk\";\nimport { AppPage, createAmyTheme } from \"@amy-app/react-components\";\nimport { Button, CssBaseline, TextField } from \"@material-ui/core\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nAmy.initialize();\n\nconst theme = createAmyTheme({\n    header: {\n        logo: `/logo192.png`,\n        background: \"00aeef\",\n        useDarkText: false,\n    },\n    login: {\n        logo: `/logo512.png`,\n    },\n    backdrop: {\n        background: `#ffffff`,\n        fadeBackground: true,\n        useDarkText: false,\n    },\n    feedbackRow: {\n        neutralBackgroundColor: \"#ffffff\",\n        positiveBackgroundColor: \"#22d62b\",\n        negativeBackgroundColor: \"#d34124\",\n    },\n    stickyInstruction: false,\n    shape: {\n        borderRadius: 5,\n    },\n    optionRow: {\n        unknownBackgroundColor: \"#FFFFFF\",\n        correctBackgroundColor: \"#22d62b\",\n        incorrectBackgroundColor: \"#d34124\",\n    },\n    instructionRow: {\n        backgroundColor: \"#ffffff\",\n    },\n    overrides: {\n        MuiCard: {\n            root: {\n                borderRadius: \"100px !important\",\n                margin: \"5px 0px !important\",\n            },\n        },\n        MuiCardHeader: {\n            root: {\n                padding: \"5px 55px !important\",\n            },\n        },\n        MuiCardContent: {\n            root: {\n                padding: \"10px 55px !important\",\n            },\n        },\n        MuiCardActions: {\n            root: {\n                padding: \"10px 55px !important\",\n            },\n        },\n    },\n});\n\nconst url = new URL(window.location.href);\n\nconst token = url.searchParams.get(\"token\");\n\nUsers.signInViaToken({ token }).then(() => {\n\n    console.log(\"waiting....\");\n\n});\n\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <CssBaseline />\n        <AppPage\n            theme={theme}\n            login={<AuthSpace />}\n            onLogout={() => {\n                console.log(\"logout\");\n            }}\n        />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n\nfunction AuthSpace() {\n    const [token, setToken] = useState(\"\");\n\n    return (\n        <>\n            <TextField\n                value={token}\n                onChange={(e) => {\n                    setToken(e.target.value);\n                }}\n            />\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={!token}\n                onClick={() => {\n                    // sign in\n                    Users.signInViaToken({ token }).then(() => {\n                        console.log(\"Amy is logged in. Wait for the magic to happen\");\n                    });\n                }}\n            >\n                Login\n            </Button>\n        </>\n    );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}